% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_data_sync.R
\name{util_sync_new_records}
\alias{util_sync_new_records}
\title{Synchronize and Extract New Records from a Data Frame}
\usage{
util_sync_new_records(new_df, key_column, old_keys = NULL)
}
\arguments{
\item{new_df}{A data frame containing new data, including a key column.}

\item{key_column}{A string specifying the column name in \code{new_df} used to identify unique records.}

\item{old_keys}{A character vector of previously seen keys. Defaults to \code{NULL} (assumes all rows are new).}
}
\value{
A list with the following components:
\describe{
\item{\code{new_ids}}{A character vector of keys that were not in \code{old_keys}.}
\item{\code{df}}{A data frame of new rows corresponding to \code{new_ids}.}
\item{\code{has_new}}{Logical indicating whether any new records were found.}
}
}
\description{
Given a new data frame and a key column, this function identifies and extracts rows
whose keys are not present in a set of previously known keys. It is typically used
to track updates from external sources (e.g., new chat messages, API responses).
}
\examples{
df_new <- data.frame(id = c("a", "b", "c"), value = 1:3)
util_sync_new_records(df_new, key_column = "id", old_keys = c("a"))

}
